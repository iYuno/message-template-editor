{"ast":null,"code":"var _jsxFileName = \"/Users/romanloginov/Documents/GitHub/message-template-editor/src/components/condition/index.tsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport TextArea from \"../textArea\";\nimport s from './condition.module.css';\nimport React from \"react\";\nimport { v4 as uuid4 } from 'uuid';\nimport { ConditionContext } from \"../../contexts/conditionContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Condition = ({\n  newCondition,\n  tab,\n  path\n}) => {\n  _s();\n  const [data, setData] = useContext(ConditionContext);\n  const getCondition = key => {\n    switch (key) {\n      case 'if':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: s.if,\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 16\n        }, this);\n      case 'then':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: s.then,\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 16\n        }, this);\n      case 'else':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: s.else,\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getRow = (key, value, index) => {\n    switch (`${key} ${typeof value}`) {\n      // case 'optionalText string':\n      // return <div className={s.option}>\n      //         <span className={s.tab}/>\n      //         <TextArea\n      //           value={`${key} ${value}`}\n      //           isRequired={false}\n      //           isCondition={false}/>\n      //        </div>\n      case 'optionalThen string':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.row,\n          children: [key !== 'optionalText' && getCondition('then'), /*#__PURE__*/_jsxDEV(TextArea, {\n            value: typeof value === 'string' ? value : '',\n            isRequired: false,\n            isCondition: true,\n            path: [...path, key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }, this);\n      case 'optionalElse string':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.row,\n          children: [key !== 'optionalText' && getCondition('else'), /*#__PURE__*/_jsxDEV(TextArea, {\n            value: typeof value === 'string' ? value : '',\n            isRequired: false,\n            isCondition: true,\n            path: [...path, key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this);\n      case 'then object':\n        return !Array.isArray(value) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Condition, {\n            newCondition: value,\n            path: [...path, key],\n            tab: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : value.map((value, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Condition, {\n            path: [...path, key, index.toString()],\n            newCondition: value,\n            tab: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.option,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: s.tab\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n              value: value.optionalText ? value.optionalText : '',\n              isRequired: false,\n              isCondition: false,\n              path: [...path, key, index.toString(), 'optionalText']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, uuid4(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this));\n      case 'else object':\n        return !Array.isArray(value) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Condition, {\n            newCondition: value,\n            path: [...path, key],\n            tab: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : value.map((value, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Condition, {\n            newCondition: value,\n            path: [...path, key, index.toString()],\n            tab: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.option,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: s.tab\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n              value: value.optionalText ? value.optionalText : '',\n              path: [...path, key, index.toString(), 'optionalText'],\n              isRequired: false,\n              isCondition: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)]\n        }, uuid4(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this));\n      case 'if string':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.row,\n          children: [key !== 'optionalText' && getCondition(key), /*#__PURE__*/_jsxDEV(TextArea, {\n            value: typeof value === 'string' ? value : '',\n            path: [...path, key],\n            isRequired: key === 'if',\n            isCondition: !(key === 'if' || key === 'optionalText')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 16\n        }, this);\n      case 'then string':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.row,\n          children: [key !== 'optionalText' && getCondition(key), /*#__PURE__*/_jsxDEV(TextArea, {\n            value: typeof value === 'string' ? value : '',\n            path: [...path, key],\n            isRequired: key === 'if',\n            isCondition: !(key === 'if' || key === 'optionalText')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 16\n        }, this);\n      case 'else string':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.row,\n          children: [key !== 'optionalText' && getCondition(key), /*#__PURE__*/_jsxDEV(TextArea, {\n            value: typeof value === 'string' ? value : '',\n            path: [...path, key],\n            isRequired: key === 'if',\n            isCondition: !(key === 'if' || key === 'optionalText')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const deleteCondition = (newPath, condition) => {\n    if (newPath.length - 2) {\n      Object.entries(condition).forEach(([key, value], index) => {\n        if (key === newPath[0]) {\n          switch (typeof value) {\n            case 'string':\n              break;\n            case 'object':\n              if (Array.isArray(value)) {\n                deleteCondition(newPath.slice(2), value[+newPath[1]]);\n              } else if (value) {\n                deleteCondition(newPath.slice(1), value);\n              }\n          }\n        }\n      });\n    } else {\n      switch (newPath[0]) {\n        case 'then':\n          if (Array.isArray(condition.then) && condition.then.length > 1) {\n            // condition.then.splice(+newPath[1], 1)\n            condition.then = [...condition.then.slice(0, +newPath[1]), ...condition.then.slice(+newPath[1] + 1)];\n          } else if (Array.isArray(condition.then)) {\n            condition.then = '';\n            condition.optionalThen = null;\n          }\n          break;\n        case 'else':\n          if (Array.isArray(condition.else) && condition.else.length > 1) {\n            condition.else = [...condition.else.slice(0, +newPath[1]), ...condition.else.slice(+newPath[1] + 1)];\n          } else if (Array.isArray(condition.else)) {\n            condition.else = '';\n            condition.optionalElse = null;\n          }\n          break;\n      }\n    }\n    return condition;\n  };\n  const deleteHandle = () => {\n    if (path.length > 1) {\n      const tempTemplate = JSON.parse(localStorage.tempTemplate);\n      const newCondition = deleteCondition(path.slice(1), tempTemplate.conditions[+path[0]]);\n      setData(prevState => {\n        const newState = {\n          ...tempTemplate,\n          conditions: [...tempTemplate.conditions.slice(0, +path[0]), newCondition, ...tempTemplate.conditions.slice(+path[0] + 1)]\n        };\n        localStorage.setItem('tempTemplate', JSON.stringify({\n          ...newState\n        }));\n        return newState;\n      });\n    } else {\n      setData(prevState => {\n        const newState = {\n          ...prevState,\n          conditions: [...prevState.conditions.slice(0, +path[0]), ...prevState.conditions.slice(+path[0] + 1)]\n        };\n        localStorage.setItem('tempTemplate', JSON.stringify({\n          ...newState\n        }));\n        return newState;\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"blockquote\", {\n      className: s.blockquote,\n      children: [tab && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: s.tab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${s.tabulation}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-symbols-outlined\",\n          onClick: deleteHandle,\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: s.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.container,\n        children: Object.entries(newCondition).map(([key, value], index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: getRow(key, value, index)\n        }, uuid4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Condition, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_c = Condition;\nexport default Condition;\nvar _c;\n$RefreshReg$(_c, \"Condition\");","map":{"version":3,"names":["useContext","TextArea","s","React","v4","uuid4","ConditionContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Condition","newCondition","tab","path","_s","data","setData","getCondition","key","className","if","children","fileName","_jsxFileName","lineNumber","columnNumber","then","else","getRow","value","index","row","isRequired","isCondition","Array","isArray","map","toString","option","optionalText","deleteCondition","newPath","condition","length","Object","entries","forEach","slice","optionalThen","optionalElse","deleteHandle","tempTemplate","JSON","parse","localStorage","conditions","prevState","newState","setItem","stringify","blockquote","tabulation","onClick","divider","container","_c","$RefreshReg$"],"sources":["/Users/romanloginov/Documents/GitHub/message-template-editor/src/components/condition/index.tsx"],"sourcesContent":["import {FC, useContext, useMemo, useState} from \"react\";\nimport TextArea from \"../textArea\";\nimport s from './condition.module.css'\nimport React from \"react\";\nimport { v4 as uuid4 } from 'uuid';\nimport {ConditionContextStateType, CurrentInputStateType, IfThenElse, templateType} from \"../../utils/types\";\nimport {ConditionContext} from \"../../contexts/conditionContext\";\nimport {CurrentInputContext} from \"../../contexts/currentInputContext\";\n\ninterface ICondition {\n  newCondition: IfThenElse,\n  tab?: boolean,\n  path: string[],\n}\n\n\nconst Condition: FC<ICondition> = ({newCondition, tab, path}) => {\n\n  const [data, setData] = useContext(ConditionContext) as ConditionContextStateType\n\n  const getCondition = (key: string) => {\n    switch (key) {\n      case 'if':\n        return <p className={s.if}>{key}</p>\n      case 'then':\n        return <p className={s.then}>{key}</p>\n      case 'else':\n        return <p className={s.else}>{key}</p>\n    }\n  }\n  const getRow = (key: string, value: string | IfThenElse | IfThenElse[] | null, index: number) => {\n    switch (`${key} ${typeof value}`) {\n      // case 'optionalText string':\n        // return <div className={s.option}>\n        //         <span className={s.tab}/>\n        //         <TextArea\n        //           value={`${key} ${value}`}\n        //           isRequired={false}\n        //           isCondition={false}/>\n        //        </div>\n      case 'optionalThen string':\n        return <div className={s.row}>\n          {\n            key !== 'optionalText' && getCondition('then')\n          }\n          <TextArea\n            value={typeof value === 'string' ? value : ''}\n            isRequired={false}\n            isCondition={true}\n            path={[...path, key]}\n          />\n        </div>\n      case 'optionalElse string':\n        return <div className={s.row}>\n          {\n            key !== 'optionalText' && getCondition('else')\n          }\n          <TextArea\n            value={typeof value === 'string' ? value : ''}\n            isRequired={false}\n            isCondition={true}\n            path={[...path, key]}\n          />\n        </div>\n      case 'then object':\n        return (\n          !Array.isArray(value) ?\n            <>\n              <Condition newCondition={value as IfThenElse} path={[...path, key]} tab/>\n            </> :\n            value.map((value, index) => (\n              <React.Fragment key={uuid4()}>\n                <Condition path={[...path, key, index.toString()]} newCondition={value} tab/>\n                <div className={s.option}>\n                  <span className={s.tab}/>\n                  <TextArea\n                    value={value.optionalText ? value.optionalText : ''}\n                    isRequired={false}\n                    isCondition={false}\n                    path={[...path, key, index.toString(), 'optionalText']}\n                  />\n                </div>\n              </React.Fragment>\n            ))\n        )\n      case 'else object':\n        return (\n          !Array.isArray(value) ?\n            <>\n              <Condition newCondition={value as IfThenElse} path={[...path, key]} tab/>\n            </>\n            :\n            value.map((value, index) => (\n              <React.Fragment key={uuid4()}>\n                <Condition newCondition={value} path={[...path, key, index.toString()]} tab/>\n                <div className={s.option}>\n                  <span className={s.tab}/>\n                  <TextArea\n                    value={value.optionalText ? value.optionalText : ''}\n                    path={[...path, key, index.toString(), 'optionalText']}\n                    isRequired={false}\n                    isCondition={false}/>\n                </div>\n              </React.Fragment>\n            ))\n        )\n      case 'if string':\n        return <div className={s.row}>\n          {\n            key !== 'optionalText' && getCondition(key)\n          }\n          <TextArea\n            value={typeof value === 'string' ? value : ''}\n            path={[...path, key]}\n            isRequired={key === 'if'}\n            isCondition={!(key === 'if' || key === 'optionalText')}/>\n        </div>\n\n      case 'then string':\n        return <div className={s.row}>\n          {\n            key !== 'optionalText' && getCondition(key)\n          }\n          <TextArea\n            value={typeof value === 'string' ? value : ''}\n            path={[...path, key]}\n            isRequired={key === 'if'}\n            isCondition={!(key === 'if' || key === 'optionalText')}/>\n        </div>\n      case 'else string':\n        return <div className={s.row}>\n          {\n            key !== 'optionalText' && getCondition(key)\n          }\n          <TextArea\n            value={typeof value === 'string' ? value : ''}\n            path={[...path, key]}\n            isRequired={key === 'if'}\n            isCondition={!(key === 'if' || key === 'optionalText')}/>\n        </div>\n    }\n  }\n\n  const deleteCondition = (newPath: string[], condition: IfThenElse) => {\n    if(newPath.length - 2) {\n      Object.entries(condition).forEach(([key, value], index) => {\n        if(key === newPath[0]) {\n          switch (typeof value) {\n            case 'string':\n              break\n            case 'object':\n              if(Array.isArray(value)) {\n                deleteCondition(newPath.slice(2), value[+newPath[1]])\n              } else if(value) {\n                deleteCondition(newPath.slice(1), value)\n              }\n          }\n        }\n      })\n    } else {\n      switch (newPath[0]) {\n        case 'then':\n          if(Array.isArray(condition.then) && condition.then.length > 1) {\n            // condition.then.splice(+newPath[1], 1)\n            condition.then = [...condition.then.slice(0, +newPath[1]), ...condition.then.slice(+newPath[1] + 1)]\n          } else if(Array.isArray(condition.then)) {\n            condition.then = '';\n            condition.optionalThen = null\n          }\n          break\n        case 'else':\n          if(Array.isArray(condition.else) && condition.else.length > 1) {\n            condition.else = [...condition.else.slice(0, +newPath[1]), ...condition.else.slice(+newPath[1] + 1)]\n          } else if(Array.isArray(condition.else)) {\n            condition.else = '';\n            condition.optionalElse = null\n          }\n          break\n      }\n    }\n    return condition\n  }\n\n  const deleteHandle = () => {\n    if(path.length > 1) {\n      const tempTemplate = JSON.parse(localStorage.tempTemplate) as templateType\n      const newCondition = deleteCondition(path.slice(1), tempTemplate.conditions[+path[0]])\n      setData(prevState => {\n        const newState = {\n          ...tempTemplate,\n          conditions: [...tempTemplate.conditions.slice(0, +path[0]), newCondition, ...tempTemplate.conditions.slice(+path[0] + 1)]\n        }\n\n        localStorage.setItem('tempTemplate', JSON.stringify({...newState}))\n\n        return newState\n      })\n    } else {\n      setData(prevState => {\n        const newState = {\n          ...prevState,\n          conditions: [...prevState.conditions.slice(0, +path[0]), ...prevState.conditions.slice(+path[0] + 1)]\n        }\n        localStorage.setItem('tempTemplate', JSON.stringify({...newState}))\n\n        return newState\n      })\n    }\n  }\n\n  return(\n\n    <>\n      <blockquote className={s.blockquote}>\n        {tab && <span className={s.tab}/>}\n        <div className={`${s.tabulation}`}>\n          <span\n            className=\"material-symbols-outlined\"\n            onClick={deleteHandle}\n          >\n            close\n          </span>\n          <span className={s.divider}></span>\n        </div>\n        <div className={s.container}>\n        {\n          Object.entries(newCondition as IfThenElse).map(([key, value], index) => (\n            <React.Fragment key={uuid4()}>\n              {getRow(key, value, index)}\n            </React.Fragment>\n          ))\n        }\n        </div>\n      </blockquote>\n    </>\n  )\n}\n\nexport default Condition\n"],"mappings":";;AAAA,SAAYA,UAAU,QAA0B,OAAO;AACvD,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,CAAC,MAAM,wBAAwB;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,EAAE,IAAIC,KAAK,QAAQ,MAAM;AAElC,SAAQC,gBAAgB,QAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAUjE,MAAMC,SAAyB,GAAGA,CAAC;EAACC,YAAY;EAAEC,GAAG;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAE/D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGjB,UAAU,CAACM,gBAAgB,CAA8B;EAEjF,MAAMY,YAAY,GAAIC,GAAW,IAAK;IACpC,QAAQA,GAAG;MACT,KAAK,IAAI;QACP,oBAAOX,OAAA;UAAGY,SAAS,EAAElB,CAAC,CAACmB,EAAG;UAAAC,QAAA,EAAEH;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MACtC,KAAK,MAAM;QACT,oBAAOlB,OAAA;UAAGY,SAAS,EAAElB,CAAC,CAACyB,IAAK;UAAAL,QAAA,EAAEH;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MACxC,KAAK,MAAM;QACT,oBAAOlB,OAAA;UAAGY,SAAS,EAAElB,CAAC,CAAC0B,IAAK;UAAAN,QAAA,EAAEH;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;IAC1C;EACF,CAAC;EACD,MAAMG,MAAM,GAAGA,CAACV,GAAW,EAAEW,KAAgD,EAAEC,KAAa,KAAK;IAC/F,QAAS,GAAEZ,GAAI,IAAG,OAAOW,KAAM,EAAC;MAC9B;MACE;MACA;MACA;MACA;MACA;MACA;MACA;MACF,KAAK,qBAAqB;QACxB,oBAAOtB,OAAA;UAAKY,SAAS,EAAElB,CAAC,CAAC8B,GAAI;UAAAV,QAAA,GAEzBH,GAAG,KAAK,cAAc,IAAID,YAAY,CAAC,MAAM,CAAC,eAEhDV,OAAA,CAACP,QAAQ;YACP6B,KAAK,EAAE,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG,EAAG;YAC9CG,UAAU,EAAE,KAAM;YAClBC,WAAW,EAAE,IAAK;YAClBpB,IAAI,EAAE,CAAC,GAAGA,IAAI,EAAEK,GAAG;UAAE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MACR,KAAK,qBAAqB;QACxB,oBAAOlB,OAAA;UAAKY,SAAS,EAAElB,CAAC,CAAC8B,GAAI;UAAAV,QAAA,GAEzBH,GAAG,KAAK,cAAc,IAAID,YAAY,CAAC,MAAM,CAAC,eAEhDV,OAAA,CAACP,QAAQ;YACP6B,KAAK,EAAE,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG,EAAG;YAC9CG,UAAU,EAAE,KAAM;YAClBC,WAAW,EAAE,IAAK;YAClBpB,IAAI,EAAE,CAAC,GAAGA,IAAI,EAAEK,GAAG;UAAE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MACR,KAAK,aAAa;QAChB,OACE,CAACS,KAAK,CAACC,OAAO,CAACN,KAAK,CAAC,gBACnBtB,OAAA,CAAAE,SAAA;UAAAY,QAAA,eACEd,OAAA,CAACG,SAAS;YAACC,YAAY,EAAEkB,KAAoB;YAAChB,IAAI,EAAE,CAAC,GAAGA,IAAI,EAAEK,GAAG,CAAE;YAACN,GAAG;UAAA;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC,gBACzE,CAAC,GACHI,KAAK,CAACO,GAAG,CAAC,CAACP,KAAK,EAAEC,KAAK,kBACrBvB,OAAA,CAACL,KAAK,CAACM,QAAQ;UAAAa,QAAA,gBACbd,OAAA,CAACG,SAAS;YAACG,IAAI,EAAE,CAAC,GAAGA,IAAI,EAAEK,GAAG,EAAEY,KAAK,CAACO,QAAQ,CAAC,CAAC,CAAE;YAAC1B,YAAY,EAAEkB,KAAM;YAACjB,GAAG;UAAA;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAC7ElB,OAAA;YAAKY,SAAS,EAAElB,CAAC,CAACqC,MAAO;YAAAjB,QAAA,gBACvBd,OAAA;cAAMY,SAAS,EAAElB,CAAC,CAACW;YAAI;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC,eACzBlB,OAAA,CAACP,QAAQ;cACP6B,KAAK,EAAEA,KAAK,CAACU,YAAY,GAAGV,KAAK,CAACU,YAAY,GAAG,EAAG;cACpDP,UAAU,EAAE,KAAM;cAClBC,WAAW,EAAE,KAAM;cACnBpB,IAAI,EAAE,CAAC,GAAGA,IAAI,EAAEK,GAAG,EAAEY,KAAK,CAACO,QAAQ,CAAC,CAAC,EAAE,cAAc;YAAE;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,GAVarB,KAAK,CAAC,CAAC;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWZ,CACjB,CAAC;MAER,KAAK,aAAa;QAChB,OACE,CAACS,KAAK,CAACC,OAAO,CAACN,KAAK,CAAC,gBACnBtB,OAAA,CAAAE,SAAA;UAAAY,QAAA,eACEd,OAAA,CAACG,SAAS;YAACC,YAAY,EAAEkB,KAAoB;YAAChB,IAAI,EAAE,CAAC,GAAGA,IAAI,EAAEK,GAAG,CAAE;YAACN,GAAG;UAAA;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC,gBACzE,CAAC,GAEHI,KAAK,CAACO,GAAG,CAAC,CAACP,KAAK,EAAEC,KAAK,kBACrBvB,OAAA,CAACL,KAAK,CAACM,QAAQ;UAAAa,QAAA,gBACbd,OAAA,CAACG,SAAS;YAACC,YAAY,EAAEkB,KAAM;YAAChB,IAAI,EAAE,CAAC,GAAGA,IAAI,EAAEK,GAAG,EAAEY,KAAK,CAACO,QAAQ,CAAC,CAAC,CAAE;YAACzB,GAAG;UAAA;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAC7ElB,OAAA;YAAKY,SAAS,EAAElB,CAAC,CAACqC,MAAO;YAAAjB,QAAA,gBACvBd,OAAA;cAAMY,SAAS,EAAElB,CAAC,CAACW;YAAI;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC,eACzBlB,OAAA,CAACP,QAAQ;cACP6B,KAAK,EAAEA,KAAK,CAACU,YAAY,GAAGV,KAAK,CAACU,YAAY,GAAG,EAAG;cACpD1B,IAAI,EAAE,CAAC,GAAGA,IAAI,EAAEK,GAAG,EAAEY,KAAK,CAACO,QAAQ,CAAC,CAAC,EAAE,cAAc,CAAE;cACvDL,UAAU,EAAE,KAAM;cAClBC,WAAW,EAAE;YAAM;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC;QAAA,GATarB,KAAK,CAAC,CAAC;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUZ,CACjB,CAAC;MAER,KAAK,WAAW;QACd,oBAAOlB,OAAA;UAAKY,SAAS,EAAElB,CAAC,CAAC8B,GAAI;UAAAV,QAAA,GAEzBH,GAAG,KAAK,cAAc,IAAID,YAAY,CAACC,GAAG,CAAC,eAE7CX,OAAA,CAACP,QAAQ;YACP6B,KAAK,EAAE,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG,EAAG;YAC9ChB,IAAI,EAAE,CAAC,GAAGA,IAAI,EAAEK,GAAG,CAAE;YACrBc,UAAU,EAAEd,GAAG,KAAK,IAAK;YACzBe,WAAW,EAAE,EAAEf,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,cAAc;UAAE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC;MAER,KAAK,aAAa;QAChB,oBAAOlB,OAAA;UAAKY,SAAS,EAAElB,CAAC,CAAC8B,GAAI;UAAAV,QAAA,GAEzBH,GAAG,KAAK,cAAc,IAAID,YAAY,CAACC,GAAG,CAAC,eAE7CX,OAAA,CAACP,QAAQ;YACP6B,KAAK,EAAE,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG,EAAG;YAC9ChB,IAAI,EAAE,CAAC,GAAGA,IAAI,EAAEK,GAAG,CAAE;YACrBc,UAAU,EAAEd,GAAG,KAAK,IAAK;YACzBe,WAAW,EAAE,EAAEf,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,cAAc;UAAE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC;MACR,KAAK,aAAa;QAChB,oBAAOlB,OAAA;UAAKY,SAAS,EAAElB,CAAC,CAAC8B,GAAI;UAAAV,QAAA,GAEzBH,GAAG,KAAK,cAAc,IAAID,YAAY,CAACC,GAAG,CAAC,eAE7CX,OAAA,CAACP,QAAQ;YACP6B,KAAK,EAAE,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG,EAAG;YAC9ChB,IAAI,EAAE,CAAC,GAAGA,IAAI,EAAEK,GAAG,CAAE;YACrBc,UAAU,EAAEd,GAAG,KAAK,IAAK;YACzBe,WAAW,EAAE,EAAEf,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,cAAc;UAAE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC;IACV;EACF,CAAC;EAED,MAAMe,eAAe,GAAGA,CAACC,OAAiB,EAAEC,SAAqB,KAAK;IACpE,IAAGD,OAAO,CAACE,MAAM,GAAG,CAAC,EAAE;MACrBC,MAAM,CAACC,OAAO,CAACH,SAAS,CAAC,CAACI,OAAO,CAAC,CAAC,CAAC5B,GAAG,EAAEW,KAAK,CAAC,EAAEC,KAAK,KAAK;QACzD,IAAGZ,GAAG,KAAKuB,OAAO,CAAC,CAAC,CAAC,EAAE;UACrB,QAAQ,OAAOZ,KAAK;YAClB,KAAK,QAAQ;cACX;YACF,KAAK,QAAQ;cACX,IAAGK,KAAK,CAACC,OAAO,CAACN,KAAK,CAAC,EAAE;gBACvBW,eAAe,CAACC,OAAO,CAACM,KAAK,CAAC,CAAC,CAAC,EAAElB,KAAK,CAAC,CAACY,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;cACvD,CAAC,MAAM,IAAGZ,KAAK,EAAE;gBACfW,eAAe,CAACC,OAAO,CAACM,KAAK,CAAC,CAAC,CAAC,EAAElB,KAAK,CAAC;cAC1C;UACJ;QACF;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,QAAQY,OAAO,CAAC,CAAC,CAAC;QAChB,KAAK,MAAM;UACT,IAAGP,KAAK,CAACC,OAAO,CAACO,SAAS,CAAChB,IAAI,CAAC,IAAIgB,SAAS,CAAChB,IAAI,CAACiB,MAAM,GAAG,CAAC,EAAE;YAC7D;YACAD,SAAS,CAAChB,IAAI,GAAG,CAAC,GAAGgB,SAAS,CAAChB,IAAI,CAACqB,KAAK,CAAC,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,GAAGC,SAAS,CAAChB,IAAI,CAACqB,KAAK,CAAC,CAACN,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;UACtG,CAAC,MAAM,IAAGP,KAAK,CAACC,OAAO,CAACO,SAAS,CAAChB,IAAI,CAAC,EAAE;YACvCgB,SAAS,CAAChB,IAAI,GAAG,EAAE;YACnBgB,SAAS,CAACM,YAAY,GAAG,IAAI;UAC/B;UACA;QACF,KAAK,MAAM;UACT,IAAGd,KAAK,CAACC,OAAO,CAACO,SAAS,CAACf,IAAI,CAAC,IAAIe,SAAS,CAACf,IAAI,CAACgB,MAAM,GAAG,CAAC,EAAE;YAC7DD,SAAS,CAACf,IAAI,GAAG,CAAC,GAAGe,SAAS,CAACf,IAAI,CAACoB,KAAK,CAAC,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,GAAGC,SAAS,CAACf,IAAI,CAACoB,KAAK,CAAC,CAACN,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;UACtG,CAAC,MAAM,IAAGP,KAAK,CAACC,OAAO,CAACO,SAAS,CAACf,IAAI,CAAC,EAAE;YACvCe,SAAS,CAACf,IAAI,GAAG,EAAE;YACnBe,SAAS,CAACO,YAAY,GAAG,IAAI;UAC/B;UACA;MACJ;IACF;IACA,OAAOP,SAAS;EAClB,CAAC;EAED,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAGrC,IAAI,CAAC8B,MAAM,GAAG,CAAC,EAAE;MAClB,MAAMQ,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACH,YAAY,CAAiB;MAC1E,MAAMxC,YAAY,GAAG6B,eAAe,CAAC3B,IAAI,CAACkC,KAAK,CAAC,CAAC,CAAC,EAAEI,YAAY,CAACI,UAAU,CAAC,CAAC1C,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;MACtFG,OAAO,CAACwC,SAAS,IAAI;QACnB,MAAMC,QAAQ,GAAG;UACf,GAAGN,YAAY;UACfI,UAAU,EAAE,CAAC,GAAGJ,YAAY,CAACI,UAAU,CAACR,KAAK,CAAC,CAAC,EAAE,CAAClC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEF,YAAY,EAAE,GAAGwC,YAAY,CAACI,UAAU,CAACR,KAAK,CAAC,CAAClC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAC1H,CAAC;QAEDyC,YAAY,CAACI,OAAO,CAAC,cAAc,EAAEN,IAAI,CAACO,SAAS,CAAC;UAAC,GAAGF;QAAQ,CAAC,CAAC,CAAC;QAEnE,OAAOA,QAAQ;MACjB,CAAC,CAAC;IACJ,CAAC,MAAM;MACLzC,OAAO,CAACwC,SAAS,IAAI;QACnB,MAAMC,QAAQ,GAAG;UACf,GAAGD,SAAS;UACZD,UAAU,EAAE,CAAC,GAAGC,SAAS,CAACD,UAAU,CAACR,KAAK,CAAC,CAAC,EAAE,CAAClC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG2C,SAAS,CAACD,UAAU,CAACR,KAAK,CAAC,CAAClC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACtG,CAAC;QACDyC,YAAY,CAACI,OAAO,CAAC,cAAc,EAAEN,IAAI,CAACO,SAAS,CAAC;UAAC,GAAGF;QAAQ,CAAC,CAAC,CAAC;QAEnE,OAAOA,QAAQ;MACjB,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBAEElD,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA;MAAYY,SAAS,EAAElB,CAAC,CAAC2D,UAAW;MAAAvC,QAAA,GACjCT,GAAG,iBAAIL,OAAA;QAAMY,SAAS,EAAElB,CAAC,CAACW;MAAI;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjClB,OAAA;QAAKY,SAAS,EAAG,GAAElB,CAAC,CAAC4D,UAAW,EAAE;QAAAxC,QAAA,gBAChCd,OAAA;UACEY,SAAS,EAAC,2BAA2B;UACrC2C,OAAO,EAAEZ,YAAa;UAAA7B,QAAA,EACvB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPlB,OAAA;UAAMY,SAAS,EAAElB,CAAC,CAAC8D;QAAQ;UAAAzC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACNlB,OAAA;QAAKY,SAAS,EAAElB,CAAC,CAAC+D,SAAU;QAAA3C,QAAA,EAE1BuB,MAAM,CAACC,OAAO,CAAClC,YAA0B,CAAC,CAACyB,GAAG,CAAC,CAAC,CAAClB,GAAG,EAAEW,KAAK,CAAC,EAAEC,KAAK,kBACjEvB,OAAA,CAACL,KAAK,CAACM,QAAQ;UAAAa,QAAA,EACZO,MAAM,CAACV,GAAG,EAAEW,KAAK,EAAEC,KAAK;QAAC,GADP1B,KAAK,CAAC,CAAC;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC,gBACb,CAAC;AAEP,CAAC;AAAAX,EAAA,CA5NKJ,SAAyB;AAAAuD,EAAA,GAAzBvD,SAAyB;AA8N/B,eAAeA,SAAS;AAAA,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}