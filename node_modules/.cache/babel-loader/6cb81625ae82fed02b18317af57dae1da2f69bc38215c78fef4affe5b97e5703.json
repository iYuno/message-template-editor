{"ast":null,"code":"var _jsxFileName = \"/Users/romanloginov/Documents/GitHub/message-template-editor/src/components/condition/conditionList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { v4 as uuid4 } from \"uuid\";\nimport Condition from \"./index\";\nimport TextArea from \"../textArea\";\nimport { ConditionContext } from \"../../contexts/conditionContext\";\nimport { CurrentInputContext } from \"../../contexts/currentInputContext\";\nimport s from './condition.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ConditionList = () => {\n  _s();\n  // const template = localStorage.conditions ? JSON.parse(localStorage.conditions) as IfThenElse[] : null\n  const [data, setData] = useContext(ConditionContext);\n  const [currentInput] = useContext(CurrentInputContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.textContainer,\n      children: /*#__PURE__*/_jsxDEV(TextArea, {\n        value: data.topText,\n        isRequired: false,\n        isCondition: true,\n        path: ['top']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), data.conditions.length > 0 && data.conditions.map((d, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Condition, {\n        newCondition: d,\n        path: [`${index}`]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), data.conditions.length > 1 && index < data.conditions.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '1.5rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(TextArea, {\n          value: d.optionalText ? d.optionalText : '',\n          isRequired: false,\n          isCondition: false,\n          path: [`${index}`, 'optionalText']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, uuid4(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.textContainer,\n      children: /*#__PURE__*/_jsxDEV(TextArea, {\n        value: data.bottomText,\n        isRequired: false,\n        isCondition: false,\n        path: ['bottom']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ConditionList, \"bm0ZwwmmMt3H7bFMoQVNW1+jl04=\");\n_c = ConditionList;\nexport default ConditionList;\nvar _c;\n$RefreshReg$(_c, \"ConditionList\");","map":{"version":3,"names":["React","useContext","v4","uuid4","Condition","TextArea","ConditionContext","CurrentInputContext","s","jsxDEV","_jsxDEV","Fragment","_Fragment","ConditionList","_s","data","setData","currentInput","children","className","textContainer","value","topText","isRequired","isCondition","path","fileName","_jsxFileName","lineNumber","columnNumber","conditions","length","map","d","index","newCondition","style","marginTop","optionalText","bottomText","_c","$RefreshReg$"],"sources":["/Users/romanloginov/Documents/GitHub/message-template-editor/src/components/condition/conditionList.tsx"],"sourcesContent":["import React, {FC, memo, useContext, useEffect, useState} from \"react\";\nimport {v4 as uuid4} from \"uuid\";\nimport Condition from \"./index\";\nimport TextArea from \"../textArea\";\nimport {ConditionContext, da} from \"../../contexts/conditionContext\";\nimport {ConditionContextStateType, CurrentInputStateType, IfThenElse} from \"../../utils/types\";\nimport {CurrentInputContext} from \"../../contexts/currentInputContext\";\nimport s from './condition.module.css'\n\nconst ConditionList: FC = () => {\n\n  // const template = localStorage.conditions ? JSON.parse(localStorage.conditions) as IfThenElse[] : null\n  const [data, setData] = useContext(ConditionContext) as ConditionContextStateType\n  const [currentInput] = useContext(CurrentInputContext) as CurrentInputStateType\n\n  return(\n    <>\n      <div className={s.textContainer}>\n        <TextArea value={data.topText} isRequired={false} isCondition={true} path={['top']}/>\n      </div>\n      {\n        data.conditions.length > 0 && data.conditions.map((d, index) => (\n          <React.Fragment key={uuid4()}>\n            <Condition newCondition={d} path={[`${index}`]}/>\n            {\n              data.conditions.length > 1 && index < data.conditions.length - 1 &&\n                <div style={{marginTop: '1.5rem'}}>\n                    <TextArea\n                        value={d.optionalText ? d.optionalText : ''}\n                        isRequired={false}\n                        isCondition={false}\n                        path={[`${index}`, 'optionalText']}/>\n                </div>\n            }\n          </React.Fragment>\n        ))\n      }\n      <div className={s.textContainer}>\n        <TextArea value={data.bottomText} isRequired={false} isCondition={false} path={['bottom']}/>\n      </div>\n    </>\n  )\n}\n\nexport default ConditionList\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}