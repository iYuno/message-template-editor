{"ast":null,"code":"var _jsxFileName = \"/Users/romanloginov/Documents/GitHub/message-template-editor/src/components/previewModal/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useMemo, useState } from \"react\";\nimport s from './previewModal.module.css';\nimport { arrVars } from \"../../utils/consts\";\nimport { v4 as uuid4 } from \"uuid\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { CurrentInputContext } from \"../../contexts/currentInputContext\";\nimport { ConditionContext } from \"../../contexts/conditionContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet debounceTimer;\nconst PreviewModal = ({\n  modalHandler\n}) => {\n  _s();\n  const [varNames, setVarNames] = useState({});\n  const [data, setData] = useContext(ConditionContext);\n  const [currentInput, setCurrentInput] = useContext(CurrentInputContext);\n  const [messagePreview, setMessagePreview] = useState('');\n  const varsHandler = (event, value) => {\n    clearTimeout(debounceTimer);\n    debounceTimer = setTimeout(() => {\n      setVarNames(prevState => ({\n        ...prevState,\n        [value]: event.target.value.trim()\n      }));\n    }, 250);\n  };\n  const messageHandler = condition => {\n    const variable = varNames[condition.if.trim().slice(1, -1)];\n    if (variable && variable.length > 0) {\n      switch (typeof condition.then) {\n        case 'string':\n          setMessagePreview(prevState => prevState + condition.then);\n          break;\n        case 'object':\n          if (condition.optionalThen) {\n            setMessagePreview(prevState => prevState + condition.optionalThen);\n          }\n          condition.then.map((c, index) => {\n            messageHandler(c);\n            if (c.optionalText) {\n              setMessagePreview(prevState => prevState + c.optionalText);\n            }\n          });\n          break;\n      }\n    } else {\n      switch (typeof condition.else) {\n        case 'string':\n          setMessagePreview(prevState => prevState + condition.else);\n          break;\n        case 'object':\n          if (condition.optionalElse) {\n            setMessagePreview(prevState => prevState + condition.optionalElse);\n          }\n          condition.else.map((c, index) => {\n            messageHandler(c);\n            if (c.optionalText) {\n              setMessagePreview(prevState => prevState + c.optionalText);\n            }\n          });\n          break;\n      }\n    }\n  };\n  useMemo(() => {\n    setMessagePreview(data.topText);\n    data.conditions.map(condition => {\n      messageHandler(condition);\n      if (condition.optionalText) {\n        setMessagePreview(prevState => prevState + condition.optionalText);\n      }\n    });\n    setMessagePreview(prevState => prevState + data.bottomText);\n    setMessagePreview(prevState => {\n      return prevState.replace(/\\{([^{}]+)\\}/g, match => {\n        if (varNames[match.slice(1, -1)]) {\n          return `${varNames[match.slice(1, -1)]}`;\n        } else {\n          return '';\n        }\n      });\n    });\n  }, [varNames]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.darkBG,\n      onClick: modalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.centered,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.modal,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.wrapper,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.modalHeader,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"message template\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: s.message,\n            children: messagePreview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.wrapper,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.modalHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: s.text,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"variables\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: s.closeIcon,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"material-symbols-outlined\",\n                onClick: modalHandler,\n                children: \"close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: s.vars__list,\n            children: arrVars.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: s.vars__list_item,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: s.input_container,\n                onClick: () => {\n                  if (currentInput[0] !== value) setCurrentInput([value]);\n                },\n                children: /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n                  onChange: event => {\n                    varsHandler(event, value.slice(1, value.length - 1));\n                    localStorage.setItem('cursor', event.target.selectionStart.toString());\n                  },\n                  onFocus: event => {\n                    if (currentInput[0] !== value) {\n                      setCurrentInput([value]);\n                    }\n                    event.target.selectionStart = localStorage.cursor ? +localStorage.cursor : 0;\n                  },\n                  onClick: event => localStorage.setItem('cursor', event.currentTarget.selectionStart.toString()),\n                  onKeyUp: event => {\n                    const newCursor = event.currentTarget.selectionStart;\n                    localStorage.setItem('cursor', newCursor.toString());\n                  },\n                  autoFocus: currentInput[0] === value,\n                  defaultValue: varNames[value.slice(1, value.length - 1)] || '',\n                  className: s.textArea,\n                  maxRows: 1,\n                  maxLength: 40\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this)]\n            }, uuid4(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(PreviewModal, \"TUmiY4qfCb35zvq0uHSGd765IfA=\");\n_c = PreviewModal;\nexport default PreviewModal;\nvar _c;\n$RefreshReg$(_c, \"PreviewModal\");","map":{"version":3,"names":["React","useContext","useMemo","useState","s","arrVars","v4","uuid4","TextareaAutosize","CurrentInputContext","ConditionContext","jsxDEV","_jsxDEV","Fragment","_Fragment","debounceTimer","PreviewModal","modalHandler","_s","varNames","setVarNames","data","setData","currentInput","setCurrentInput","messagePreview","setMessagePreview","varsHandler","event","value","clearTimeout","setTimeout","prevState","target","trim","messageHandler","condition","variable","if","slice","length","then","optionalThen","map","c","index","optionalText","else","optionalElse","topText","conditions","bottomText","replace","match","children","className","darkBG","onClick","fileName","_jsxFileName","lineNumber","columnNumber","centered","modal","wrapper","modalHeader","message","text","closeIcon","vars__list","vars__list_item","input_container","onChange","localStorage","setItem","selectionStart","toString","onFocus","cursor","currentTarget","onKeyUp","newCursor","autoFocus","defaultValue","textArea","maxRows","maxLength","_c","$RefreshReg$"],"sources":["/Users/romanloginov/Documents/GitHub/message-template-editor/src/components/previewModal/index.tsx"],"sourcesContent":["import React, {ChangeEvent, FC, useContext, useMemo, useState} from \"react\";\nimport s from './previewModal.module.css'\nimport {arrVars} from \"../../utils/consts\";\nimport {v4 as uuid4} from \"uuid\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport {CurrentInputContext} from \"../../contexts/currentInputContext\";\nimport {ConditionContextStateType, CurrentInputStateType, IfThenElse, variablesType} from \"../../utils/types\";\nimport {ConditionContext, da} from \"../../contexts/conditionContext\";\n\ninterface IPreviewModal {\n  modalHandler: () => void\n}\n\nlet debounceTimer: NodeJS.Timeout;\n\nconst PreviewModal: FC<IPreviewModal> = ({modalHandler}) => {\n\n  const [varNames, setVarNames] = useState<variablesType>({} as variablesType)\n  const [data, setData] = useContext(ConditionContext) as ConditionContextStateType\n  const [currentInput, setCurrentInput] = useContext(CurrentInputContext) as CurrentInputStateType\n  const [messagePreview, setMessagePreview] = useState('')\n\n  const varsHandler = (event: ChangeEvent<HTMLTextAreaElement>, value: string) => {\n    clearTimeout(debounceTimer)\n\n    debounceTimer = setTimeout(() => {\n      setVarNames(prevState => ({...prevState, [value as keyof typeof varNames]: event.target.value.trim()}))\n    }, 250)\n\n  }\n\n  const messageHandler = (condition: IfThenElse) => {\n    const variable = varNames[condition.if.trim().slice(1, -1) as keyof typeof varNames]\n\n    if(variable && variable.length > 0) {\n      switch (typeof condition.then) {\n        case 'string':\n          setMessagePreview(prevState => prevState + condition.then)\n          break\n        case 'object':\n          if(condition.optionalThen) {\n            setMessagePreview(prevState => prevState + condition.optionalThen)\n          }\n          condition.then.map((c, index) => {\n            messageHandler(c)\n            if(c.optionalText) {\n              setMessagePreview(prevState => prevState + c.optionalText)\n            }\n          })\n          break\n      }\n    } else {\n      switch (typeof condition.else) {\n        case 'string':\n          setMessagePreview(prevState => prevState + condition.else)\n          break\n        case 'object':\n          if(condition.optionalElse) {\n            setMessagePreview(prevState => prevState + condition.optionalElse)\n          }\n          condition.else.map((c, index) => {\n            messageHandler(c)\n            if(c.optionalText) {\n              setMessagePreview(prevState => prevState + c.optionalText)\n            }\n          })\n          break\n      }\n    }\n  }\n\n  useMemo(() => {\n\n    setMessagePreview(data.topText)\n\n    data.conditions.map((condition) => {\n      messageHandler(condition)\n      if(condition.optionalText) {\n        setMessagePreview(prevState => prevState + condition.optionalText)\n      }\n    })\n\n    setMessagePreview(prevState => prevState + data.bottomText)\n\n    setMessagePreview(prevState => {\n      return prevState.replace(/\\{([^{}]+)\\}/g, (match) => {\n        if(varNames[match.slice(1, -1) as keyof typeof varNames]) {\n          return `${varNames[match.slice(1, -1) as keyof typeof varNames]}`;\n        } else {\n          return ''\n        }\n      })\n    })\n\n  }, [varNames])\n\n  return(\n    <>\n      <div className={s.darkBG} onClick={modalHandler}/>\n      <div className={s.centered}>\n        <div className={s.modal}>\n          <div className={s.wrapper}>\n            <div className={s.modalHeader}>\n              <p>message template</p>\n            </div>\n            <pre className={s.message}>\n              {messagePreview}\n            </pre>\n          </div>\n          <div className={s.wrapper}>\n            <div className={s.modalHeader}>\n              <div className={s.text}><p>variables</p></div>\n              <div className={s.closeIcon}>\n                <span\n                  className=\"material-symbols-outlined\"\n                  onClick={modalHandler}\n                >\n                close\n              </span>\n              </div>\n            </div>\n            <ul className={s.vars__list}>\n              {\n                arrVars.map((value, index) => (\n                  <li key={uuid4()} className={s.vars__list_item}>\n                    <p>{value}</p>\n                    <div\n                      className={s.input_container}\n                      onClick={() => {\n                        if(currentInput[0] !== value) setCurrentInput([value])\n                      }}\n                    >\n                      <TextareaAutosize\n                        onChange={(event) => {\n                          varsHandler(event, value.slice(1, value.length - 1))\n                          localStorage.setItem('cursor', event.target.selectionStart.toString())\n                        }}\n                        onFocus={(event) => {\n                          if(currentInput[0] !== value) {\n                            setCurrentInput([value])\n                          }\n                          event.target.selectionStart = localStorage.cursor ? +localStorage.cursor : 0\n                        }}\n                        onClick={(event) => localStorage.setItem('cursor', event.currentTarget.selectionStart.toString())}\n                        onKeyUp={(event) => {\n                          const newCursor = event.currentTarget.selectionStart\n                          localStorage.setItem('cursor', newCursor.toString())\n                        }}\n                        autoFocus={currentInput[0] === value}\n                        defaultValue={varNames[value.slice(1, value.length - 1) as keyof typeof varNames] || ''}\n                        className={s.textArea}\n                        maxRows={1}\n                        maxLength={40}\n                      />\n                    </div>\n                  </li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default PreviewModal\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}